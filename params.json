{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"# mouse\r\n\r\nA port of mouse.rb from [AXElements](http://github.com/Marketcircle/AXElements),\r\nbut cleaned up and rewritten in C to be more portable across languages and\r\nruntimes.\r\n\r\nBy itself, the `mouse` gem is not that useful; but in combination\r\nwith a gem for discovering the positions of things (like buttons) on\r\nthe screen, this gem is very powerful and can be used for tasks such\r\nas automated functional\r\ntesting; this is the purpose of the\r\n[AXElements](http://github.com/Marketcircle/AXElements) project.\r\n\r\n[Documentation](http://rdoc.info/gems/mouse/frames)\r\n\r\n[![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/AXElements/mouse)\r\n\r\n\r\n## Examples\r\n\r\n    require 'mouse'\r\n\r\n    Mouse.current_position # => #<CGPoint x=873.2 y=345.0>\r\n\r\n    # positions can be given as an array with two points, or a CGPoint\r\n    Mouse.move_to [10, 10]\r\n    Mouse.move_to CGPoint.new(10, 10)\r\n\r\n    # optionally specify how long it should take the mouse to move\r\n    Mouse.move_to [800, 300], 0.2\r\n\r\n    Mouse.click\r\n    Mouse.double_click\r\n    Mouse.triple_click\r\n\r\n    # secondary_click and right_click are aliases to the same method\r\n    Mouse.secondary_click\r\n    Mouse.right_click\r\n\r\n    # positive number scrolls up, negative number scrolls down\r\n    Mouse.scroll 10\r\n    Mouse.scroll -10\r\n\r\n    # perform horizontal scrolling as well\r\n    # positive number scrolls left, negative number scrolls right\r\n    Mouse.horizontal_scroll 10\r\n    Mouse.horizontal_scroll -10\r\n\r\n    # optionally specify units for scroll amount, :pixel or :line\r\n    Mouse.scroll 10, :pixels\r\n    Mouse.scroll -10, :pixels\r\n\r\n    # just like a two finger double tap\r\n    Mouse.smart_magnify\r\n    Mouse.smart_magnify [600, 500]\r\n\r\n    # pinch-to-zoom\r\n    Mouse.pinch :zoom\r\n    Mouse.pinch :expand, 2\r\n\r\n    # pinch-to-unzoom\r\n    Mouse.pinch :unzoom, 2.0, 5.0\r\n    Mouse.pinch :contract, 1.0\r\n\r\n    # even perform rotation gestures!\r\n    Mouse.rotate :clockwise, 90\r\n    Mouse.rotate :counter_clockwise, 180\r\n    Mouse.rotate :cw, 360\r\n\r\n    # swipe, swipe, swipe\r\n    Mouse.swipe :up\r\n    Mouse.swipe :down\r\n    Mouse.swipe :left\r\n    Mouse.swipe :right\r\n\r\n\r\nSee the [Mouse Documentation](http://rdoc.info/gems/mouse/Mouse) for\r\nmore details.\r\n\r\nYou may have noticed that when you ask the mouse to move to a specific\r\nlocation that it may not end up at the exact co-ordinates, but it will\r\nbe close (distance of less than 1). This is by design, but that may\r\nchange in the future if there are enough complaints.\r\n\r\n\r\n## TODO\r\n\r\n- [ ] More mouse gesture support\r\n- [ ] Make animation duration accurate (current naivet√© has a bit of error)\r\n- [ ] Import test app and specialize so we can have better tests\r\n\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2012, Mark Rada\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright\r\n  notice, this list of conditions and the following disclaimer.\r\n* Redistributions in binary form must reproduce the above copyright\r\n  notice, this list of conditions and the following disclaimer in the\r\n  documentation and/or other materials provided with the distribution.\r\n* Neither the name of Mark Rada nor the names of its\r\n  contributors may be used to endorse or promote products derived\r\n  from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL Mark Rada BE LIABLE FOR ANY\r\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\r\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\r\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\r\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n","name":"mouse","tagline":"High Level Mouse Manipulation via CGEvents"}